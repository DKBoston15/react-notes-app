{"version":3,"sources":["theme.tsx","modules/notes/SearchBar.tsx","modules/notes/NoteForm.tsx","modules/notes/NoteModal.tsx","modules/notes/Note.tsx","modules/notes/NotesBoard.tsx","modules/notes/NotesNavigation.tsx","modules/notes/utils.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","createMuiTheme","palette","secondary","main","light","dark","overrides","MuiCheckbox","root","color","marginLeft","MuiCardContent","padding","textAlign","fontSize","MuiCardActions","MuiTabs","indicator","display","scroller","paddingBottom","MuiTab","background","margin","minWidth","minHeight","content","width","height","borderRadius","backgroundColor","useStyles","makeStyles","searchBar","marginTop","searchTextField","boxShadow","customAdornment","customSearchIcon","SearchBar","Autocomplete","className","id","freeSolo","options","renderInput","params","TextField","placeholder","InputProps","disableUnderline","startAdornment","InputAdornment","position","title","paddingLeft","paddingTop","form","flexDirection","leftContentContainer","rightContentContainer","paddingRight","textContentField","buttonContainer","bottom","right","button","NoteForm","setNotes","notes","handleClose","classes","Typography","variant","initialValues","description","category","onSubmit","notePayload","setSubmitting","newNote","length","lastUpdated","Date","toDateString","substring","updatedNotes","console","log","values","isSubmitting","handleChange","Box","name","type","as","label","multiline","rows","Select","value","onChange","MenuItem","Button","onClick","disabled","modalContainer","justifyContent","alignItems","modalContent","NoteModal","open","Modal","onClose","cardWrapper","home","work","personal","descriptionText","titleText","fontWeight","cursorClass","cursor","Note","deleteNote","Card","join","CardContent","Checkbox","CardActions","grid","NotesBoard","useState","setOpen","newNotes","filter","note","index","arr","Grid","container","spacing","map","item","xs","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","circle","top","zIndex","bgOrange","bgPurple","bgGreen","navContainer","customAppBar","addNotesButton","whiteSpace","NotesNavigation","handleOpen","tab","setTab","filteredNotes","useMemo","getFilteredNotes","TabContext","Container","AppBar","Tabs","event","newValue","Tab","noteList","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae222a87.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\n\nconst theme = () =>\n    createMuiTheme({\n        palette: {\n            secondary: {\n                main: \"hsla(0, 0%, 100%, 0.55)\",\n                light: \"hsla(0, 0%, 100%, 0.55)\",\n                dark: \"hsla(0, 0%, 100%, 0.55)\"\n            }\n        },\n        overrides: {\n            MuiCheckbox: {\n                root: {\n                    color: \"hsla(0, 0%, 100%, 0.55)\",\n                    marginLeft: \"-.5em\"\n                }\n            },\n            MuiCardContent: {\n                root: {\n                    padding: \".8em 1.2em\",\n                    textAlign: \"left\",\n                    fontSize: \".8rem\"\n                }\n            },\n            MuiCardActions: {\n                root: {\n                    padding: \"0.8em\"\n                }\n            },\n            MuiTabs: {\n                indicator: {\n                    display: \"none\"\n                },\n                scroller: {\n                    paddingBottom: \"1em\"\n                }\n            },\n            MuiTab: {\n                root: {\n                    background: \"none\",\n                    margin: \"0 .2em\",\n                    minWidth: \"8em !important\",\n                    minHeight: \"3em\",\n                    padding: \".2em\",\n                    \"&::after\": {\n                        content: \" \",\n                        display: \"block\",\n                        width: \"15px\",\n                        height: \"15px\",\n                        borderRadius: \"7.5px\",\n                        backgroundColor: \"#69b6d5\"\n                    },\n                    \"&$selected\": {\n                        color: \"white\",\n                        background: \"#69BCFF\",\n                        borderRadius: \"5px\"\n                    }\n                }\n            }\n        }\n    });\n\nexport default theme;\n","// Material UI\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Search from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    searchBar: { width: \"100%\", marginTop: \"5em\" },\n    searchTextField: {\n        background: \"white\",\n        padding: \"1em\",\n        boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\"\n    },\n    customAdornment: { color: \"#858585\" },\n    customSearchIcon: { fontSize: \"2.5rem\" }\n});\n\nexport const SearchBar = () => {\n    const {\n        searchBar,\n        searchTextField,\n        customAdornment,\n        customSearchIcon\n    } = useStyles();\n    return (\n        <Autocomplete\n            className={searchBar}\n            id=\"search-bar\"\n            freeSolo\n            options={[\"\"]}\n            renderInput={(params) => (\n                <TextField\n                    className={searchTextField}\n                    {...params}\n                    placeholder=\"Search notes...\"\n                    margin=\"normal\"\n                    InputProps={{\n                        disableUnderline: true,\n                        startAdornment: (\n                            <InputAdornment\n                                className={customAdornment}\n                                position=\"start\"\n                            >\n                                <Search className={customSearchIcon} />\n                            </InputAdornment>\n                        )\n                    }}\n                />\n            )}\n        />\n    );\n};\n","// Material UI\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Formik, Field, Form } from \"formik\";\n\nimport { INotesCommonProps } from \"../../types\";\n\nconst useStyles = makeStyles({\n    title: {\n        paddingLeft: \"4rem\",\n        color: \"#858585\",\n        paddingTop: \".3em\",\n        fontSize: \"2rem\"\n    },\n    form: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: \"3rem\"\n    },\n    leftContentContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"70%\",\n        paddingLeft: \"4em\"\n    },\n    rightContentContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"30%\",\n        paddingLeft: \"1em\",\n        paddingRight: \"4em\"\n    },\n    textContentField: {\n        marginTop: \"2em\"\n    },\n    buttonContainer: {\n        display: \"flex\",\n        position: \"absolute\",\n        bottom: \"16em\",\n        right: \"26em\"\n    },\n    button: {\n        color: \"#2196F3\"\n    }\n});\n\ninterface INoteFormProps extends INotesCommonProps {\n    handleClose: () => void;\n}\n\n// Install UUID and add ID to new note\n\nexport const NoteForm = ({ setNotes, notes, handleClose }: INoteFormProps) => {\n    const classes = useStyles();\n    return (\n        <>\n            <Typography variant=\"h4\" className={classes.title}>\n                Add Note\n            </Typography>\n            <hr />\n            <Formik\n                initialValues={{\n                    title: \"\",\n                    description: \"\",\n                    category: \"\"\n                }}\n                onSubmit={(notePayload, { setSubmitting }) => {\n                    setSubmitting(true);\n                    const newNote = {\n                        ...notePayload,\n                        id: notes.length,\n                        lastUpdated: new Date().toDateString().substring(4)\n                    };\n                    let updatedNotes = [...notes, newNote];\n                    setNotes(updatedNotes);\n                    console.log(\"NOTES: \", notes);\n                    setSubmitting(false);\n                    handleClose();\n                }}\n            >\n                {({ values, isSubmitting, handleChange }) => (\n                    <Form className={classes.form}>\n                        <Box className={classes.leftContentContainer}>\n                            <Field\n                                placeholder=\"Title\"\n                                name=\"title\"\n                                type=\"input\"\n                                as={TextField}\n                            />\n                            <Field\n                                className={classes.textContentField}\n                                name=\"description\"\n                                type=\"input\"\n                                as={TextField}\n                                label=\"Description...\"\n                                multiline\n                                variant=\"filled\"\n                                rows={8}\n                            />\n                        </Box>\n                        <Box className={classes.rightContentContainer}>\n                            <Select\n                                name=\"category\"\n                                value={values.category}\n                                onChange={handleChange}\n                            >\n                                <MenuItem value=\"\">\n                                    <em>None</em>\n                                </MenuItem>\n                                <MenuItem value=\"home\">Home</MenuItem>\n                                <MenuItem value=\"work\">Work</MenuItem>\n                                <MenuItem value=\"personal\">Personal</MenuItem>\n                            </Select>\n                        </Box>\n                        {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\n                        <Box className={classes.buttonContainer}>\n                            <Button\n                                onClick={handleClose}\n                                className={classes.button}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                className={classes.button}\n                                disabled={isSubmitting}\n                                type=\"submit\"\n                            >\n                                Add\n                            </Button>\n                        </Box>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    );\n};\n","// Material UI\nimport Modal from \"@material-ui/core/Modal\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Modules\nimport { NoteForm } from \"./NoteForm\";\nimport { INotesCommonProps } from \"../../types\";\n\nconst useStyles = makeStyles({\n    modalContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    modalContent: {\n        background: \"white\", // theme from material UI\n        width: \"75em\",\n        height: \"35em\"\n    }\n});\n\ninterface IModalProp extends INotesCommonProps {\n    open: boolean;\n    handleClose: () => void;\n}\n\nexport const NoteModal = ({\n    open,\n    handleClose,\n    setNotes,\n    notes\n}: IModalProp) => {\n    const { modalContainer, modalContent } = useStyles();\n    return (\n        <Modal className={modalContainer} open={open} onClose={handleClose}>\n            <Box className={modalContent}>\n                <NoteForm\n                    notes={notes}\n                    setNotes={setNotes}\n                    handleClose={handleClose}\n                />\n            </Box>\n        </Modal>\n    );\n};\n","// Material UI\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    cardWrapper: {\n        textAlign: \"center\",\n        color: \"white\",\n        fontSize: \"1rem\",\n        minWidth: \"12em\",\n        minHeight: \"6em\",\n        boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\"\n    },\n    home: {\n        backgroundColor: \"#FF9100 !important\"\n    },\n    work: {\n        backgroundColor: \"#5C6BC0\"\n    },\n    personal: {\n        backgroundColor: \"#66BB6A\"\n    },\n    descriptionText: {\n        color: \"hsla(0, 0%, 100%, 0.85)\"\n    },\n    titleText: {\n        fontSize: \"1.4em\",\n        fontWeight: \"bold\"\n    },\n    cursorClass: {\n        cursor: \"pointer\"\n    }\n});\ninterface INoteProp {\n    id: number;\n    title: string;\n    description: string;\n    category: string;\n    lastUpdated: string;\n    deleteNote: (id: number) => void;\n}\n\nexport const Note = ({\n    id,\n    title,\n    description,\n    category,\n    lastUpdated,\n    deleteNote\n}: INoteProp) => {\n    const classes = useStyles();\n    return (\n        // @ts-ignore\n        <Card className={[classes.cardWrapper, classes[category]].join(\" \")}>\n            <CardContent>\n                <Box\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-between\"\n                >\n                    <Box display=\"flex\" alignItems=\"center\">\n                        <Checkbox color=\"secondary\" />\n                        <div className={classes.titleText}>{title}</div>\n                    </Box>\n                    <Box\n                        width=\"4em\"\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <EditIcon\n                            color=\"secondary\"\n                            className={classes.cursorClass}\n                        />\n                        <DeleteIcon\n                            className={classes.cursorClass}\n                            color=\"secondary\"\n                            onClick={() => deleteNote(id)}\n                        />\n                    </Box>\n                </Box>\n                <div className={classes.descriptionText}>{description}</div>\n            </CardContent>\n            <CardActions>\n                <div className={classes.descriptionText}>{lastUpdated}</div>\n            </CardActions>\n        </Card>\n    );\n};\n","// React\nimport { useState } from \"react\";\n\n// Material UI elements\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n// Components\nimport { Note } from \"./Note\";\n\nimport { INotesCommonProps } from \"../../types\";\n\nconst useStyles = makeStyles({\n    grid: {\n        marginTop: \"2em\"\n    }\n});\n\ntype INotesProp = Pick<INotesCommonProps, \"notes\" | \"setNotes\">;\n\nexport const NotesBoard = ({ notes, setNotes }: INotesProp) => {\n    const { grid } = useStyles();\n\n    const [open, setOpen] = useState(false);\n\n    const onClose = () => {\n        setOpen(false);\n    };\n\n    const deleteNote = (id: number) => {\n        let newNotes = notes.filter(function (note, index, arr) {\n            return note.id !== id;\n        });\n        setNotes(newNotes);\n        setOpen(true);\n    };\n\n    return (\n        <>\n            <Grid container spacing={3} className={grid}>\n                {notes.map((note) => (\n                    <Grid item xs={6} key={note.id}>\n                        <Note\n                            title={note.title}\n                            description={note.description}\n                            category={note.category}\n                            lastUpdated={note.lastUpdated}\n                            id={note.id}\n                            key={note.id}\n                            deleteNote={deleteNote}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"left\"\n                }}\n                onClose={onClose}\n                open={open}\n                autoHideDuration={2000}\n            >\n                <Alert variant=\"filled\" severity=\"success\">\n                    Note Deleted\n                </Alert>\n            </Snackbar>\n        </>\n    );\n};\n","// React\nimport { useState, useMemo } from \"react\";\n\n// Material UI\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport TabContext from \"@material-ui/lab/TabContext\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Components\n// import { NotesProgressBar } from \"./NotesProgressBar\";\nimport { NotesBoard } from \"./NotesBoard\";\nimport { getFilteredNotes } from \"./utils\";\ninterface INavProp {\n    handleOpen: () => void;\n    setNotes(notes: Array<any>): any;\n    notes: Array<any>;\n}\n\nconst useStyles = makeStyles({\n    circle: {\n        width: \"7px\",\n        height: \"7px\",\n        borderRadius: \"100%\",\n        backgroundColor: \"red\",\n        position: \"relative\",\n        top: \"3.2em\",\n        right: \"4.5em\",\n        zIndex: 10000\n    },\n    bgOrange: {\n        backgroundColor: \"#FF9100\"\n    },\n    bgPurple: {\n        backgroundColor: \"#5C6BC0\"\n    },\n    bgGreen: {\n        backgroundColor: \"#66BB6A\"\n    },\n    navContainer: {\n        display: \"flex\",\n        marginTop: \"1em\",\n        padding: \"0\"\n    },\n\n    customAppBar: {\n        background: \"none\",\n        width: \"100%\",\n        color: \"black\",\n        boxShadow: \"none\",\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        flexDirection: \"row\"\n    },\n    addNotesButton: {\n        background: \"#2196F3\",\n        padding: \"0 4em\",\n        color: \"white\",\n        whiteSpace: \"nowrap\",\n        width: \"1em\",\n        borderRadius: \"5px\",\n        height: \"3em\"\n    }\n});\n\nexport type TNote = {\n    id: number;\n    title: string;\n    description: string;\n    category: string;\n    lastUpdated: string;\n};\n\nexport type TTab = \"all\" | \"home\" | \"work\" | \"personal\";\n\n// 1. Don't duplicate useState when you don't have to\n// 2. Extract JS specific functions to e.g. utils.ts or helpers.ts\n// 3. You can even create a custom hook e.g. useNotes to abstract business logic in React.\n// 4. Point 2 will allow you to wirte great unit tests using e.g. jest\nexport const NotesNavigation = ({ handleOpen, notes, setNotes }: INavProp) => {\n    const classes = useStyles();\n    // Tab State\n    const [tab, setTab] = useState<TTab>(\"all\");\n\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: TTab) => {\n        setTab(newValue);\n    };\n\n    const filteredNotes = useMemo(() => {\n        return getFilteredNotes(tab, notes);\n    }, [notes, tab]);\n\n    return (\n        <div>\n            <TabContext value={tab}>\n                <Container className={classes.navContainer}>\n                    <AppBar position=\"static\" className={classes.customAppBar}>\n                        <Tabs value={tab} onChange={handleChange}>\n                            <Tab label=\"All\" value={\"all\"} />\n                            <Tab label=\"Home\" value={\"home\"} />\n                            {/* <FilterButton isActive={tab === \"home\"} category=\"home\" /> */}\n                            {tab !== \"home\" && (\n                                <div\n                                    className={`${classes.circle} ${classes.bgOrange}`}\n                                ></div>\n                            )}\n                            <Tab label=\"Work\" value={\"work\"} />\n                            {tab !== \"work\" && (\n                                <div\n                                    className={`${classes.circle} ${classes.bgPurple}`}\n                                ></div>\n                            )}\n                            <Tab label=\"Personal\" value={\"personal\"} />\n                            {tab !== \"personal\" && (\n                                <div\n                                    className={`${classes.circle} ${classes.bgGreen}`}\n                                ></div>\n                            )}\n                        </Tabs>\n                        <Button\n                            className={classes.addNotesButton}\n                            onClick={handleOpen}\n                        >\n                            + Add Note\n                        </Button>\n                    </AppBar>\n                </Container>\n                <NotesBoard setNotes={setNotes} notes={filteredNotes} />\n            </TabContext>\n        </div>\n    );\n};\n","export type TNote = {\n    id: number;\n    title: string;\n    description: string;\n    category: string;\n    lastUpdated: string;\n};\n\nexport type TTab = \"all\" | \"home\" | \"work\" | \"personal\";\n\n// I usually create utils or helpers (.ts) for these functions\nexport const getFilteredNotes = (tab: TTab, notes: TNote[]) =>\n    tab === \"all\" ? notes : notes.filter((note) => note.category === tab);\n","// React\nimport { useState } from \"react\";\n\n// Material UI\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\n\n// Components\nimport { SearchBar } from \"./modules/notes/SearchBar\";\nimport { NoteModal } from \"./modules/notes/NoteModal\";\nimport { NotesNavigation } from \"./modules/notes/NotesNavigation\";\n\nconst noteList = [\n    {\n        id: 1,\n        title: \"Example Note 1\",\n        category: \"home\",\n        description:\n            \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        lastUpdated: \"Jan 20, 2021\"\n    },\n    {\n        id: 2,\n        title: \"Example Note 2\",\n        category: \"home\",\n        description:\n            \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        lastUpdated: \"Jan 21, 2021\"\n    },\n    {\n        id: 3,\n        title: \"Example Note 3\",\n        category: \"home\",\n        description:\n            \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        lastUpdated: \"Jan 22, 2021\"\n    },\n    {\n        id: 4,\n        title: \"Example Note 4\",\n        category: \"home\",\n        description:\n            \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        lastUpdated: \"Jan 23, 2021\"\n    },\n    {\n        id: 5,\n        title: \"Example Note 5\",\n        category: \"work\",\n        description:\n            \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        lastUpdated: \"Jan 24, 2021\"\n    },\n    {\n        id: 6,\n        title: \"Example Note 6\",\n        category: \"work\",\n        description:\n            \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        lastUpdated: \"Jan 25, 2021\"\n    },\n    {\n        id: 7,\n        title: \"Example Note 7\",\n        category: \"work\",\n        description:\n            \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        lastUpdated: \"Jan 26, 2021\"\n    },\n    {\n        id: 8,\n        title: \"Example Note 8\",\n        category: \"work\",\n        description:\n            \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        lastUpdated: \"Jan 27, 2021\"\n    },\n    {\n        id: 9,\n        title: \"Example Note 9\",\n        category: \"personal\",\n        description:\n            \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        lastUpdated: \"Jan 28, 2021\"\n    },\n    {\n        id: 10,\n        title: \"Example Note 10\",\n        category: \"personal\",\n        description:\n            \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        lastUpdated: \"Jan 29, 2021\"\n    },\n    {\n        id: 11,\n        title: \"Example Note 11\",\n        category: \"personal\",\n        description:\n            \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        lastUpdated: \"Jan 30, 2021\"\n    },\n    {\n        id: 12,\n        title: \"Example Note 12\",\n        category: \"personal\",\n        description:\n            \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        lastUpdated: \"Jan 31, 2021\"\n    }\n];\n\nfunction App() {\n    // Modal State\n    const [open, setOpen] = useState(false);\n    // Modal Handlers\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    const [notes, setNotes] = useState(noteList);\n\n    return (\n        <ThemeProvider theme={theme()}>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                <CssBaseline />\n                <Box\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                    width=\"60%\"\n                    flexDirection=\"column\"\n                >\n                    <NoteModal\n                        open={open}\n                        setNotes={setNotes}\n                        notes={notes}\n                        handleClose={handleClose}\n                    />\n                    <SearchBar />\n                    <NotesNavigation\n                        notes={notes}\n                        handleOpen={handleOpen}\n                        setNotes={setNotes}\n                    />\n                </Box>\n            </Box>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}